@using Humanizer;
@model WebApplication.Models.TaskGroupDependency

@{
    ViewData["Title"] = "Details - " + "TaskGroupDependency".Humanize(LetterCasing.Title);
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Details</h1>

<div>
    <h4> @("TaskGroupDependency".Humanize(LetterCasing.Title))</h4>
    <hr />
    <dl class="row">
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.AncestorTaskGroup)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.AncestorTaskGroup.TaskGroupName)
            </dd>
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.DescendantTaskGroup)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.DescendantTaskGroup.TaskGroupName)
            </dd>
                <dt class = "col-sm-2">
                    @Html.DisplayNameFor(model => model.DependencyType)
                </dt>
                <dd class = "col-sm-10">
                    @Html.DisplayFor(model => model.DependencyType)
                </dd>               
    </dl>
</div>
<div>
    <a href="javascript:history.go(-1)" title="Back to List" class="btn btn-secondary"><i class="fa fa-arrow-circle-left"></i> Back</a>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) 
</div>
@section Scripts
{
    <script type="text/javascript">
		$(document).ready(function ()
        {
            $(".jsonpretty").each(function (index) {
                $(".jsonformatted", this).JSONView($(".jsonraw", this)[0].innerText);
                $(".jsonraw", this)[0].innerText = null;
            });

		});
    </script>
}   
