{
	"name": "OnP-SQL-AZ-Storage-Parquet-OnP-SH-IR",
	"properties": {
		"activities": [
			{
				"name": "AF Log - Get Metadata Failed",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Lookup Get SQL Metadata",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "AZ-Function-Generic",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"Body": {
							"value": "[\n    {\n        \"TaskInstanceId\":@{pipeline().parameters.TaskObject.TaskInstanceId},\n        \"ExecutionUid\":@{pipeline().parameters.TaskObject.ExecutionUid},\n        \"RunId\":@{pipeline().RunId},    \n        \"EndTime\":@{utcnow()},\n        \"Status\":\"Failed\",\n        \"Activity\":\"Get Metadata\",\n        \"Comments\":@{activity('Lookup Get SQL Metadata').errors}\n    }\n]",
							"type": "Expression"
						},
						"FunctionName": "Log",
						"Method": "Post"
					}
				}
			},
			{
				"name": "AF Get Information Schema SQL",
				"type": "AzureFunctionActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"functionName": "GetInformationSchemaSQL",
					"method": "POST",
					"body": {
						"value": "@json(concat('{\"TaskInstanceId\":\"', string(pipeline().parameters.TaskObject.TaskInstanceId), '\",\"ExecutionUid\":\"', string(pipeline().parameters.TaskObject.ExecutionUid), '\",\"RunId\":\"', string(pipeline().RunId), '\",\"TableSchema\":\"', string(pipeline().parameters.TaskObject.Source.Extraction.TableSchema), '\",\"TableName\":\"', string(pipeline().parameters.TaskObject.Source.Extraction.TableName),'\"}'))",
						"type": "Expression"
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureFunctionAdsGoFastDataLakeAccelFunApp",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "AF Persist Metadata and Get Mapping",
				"type": "AzureFunctionActivity",
				"dependsOn": [
					{
						"activity": "Lookup Get SQL Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"functionName": "TaskExecutionSchemaFile",
					"method": "POST",
					"body": {
						"value": "@json(concat('{\"TaskInstanceId\":\"', string(pipeline().parameters.TaskObject.TaskInstanceId), '\",\"ExecutionUid\":\"', string(pipeline().parameters.TaskObject.ExecutionUid), '\",\"RunId\":\"', string(pipeline().RunId), '\",\"StorageAccountName\":\"', string(pipeline().parameters.TaskObject.Target.StorageAccountName), '\",\"StorageAccountContainer\":\"', string(pipeline().parameters.TaskObject.Target.StorageAccountContainer), '\",\"RelativePath\":\"', string(pipeline().parameters.TaskObject.Target.RelativePath), '\",\"SchemaFileName\":\"', string(pipeline().parameters.TaskObject.Target.SchemaFileName), '\",\"SourceType\":\"', string(pipeline().parameters.TaskObject.Source.Type), '\",\"TargetType\":\"', string(pipeline().parameters.TaskObject.Target.Type), '\",\"Data\":',string(activity('Lookup Get SQL Metadata').output),',\"MetadataType\":\"SQL\"}'))",
						"type": "Expression"
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureFunctionAdsGoFastDataLakeAccelFunApp",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Lookup Get SQL Metadata",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "AF Get Information Schema SQL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "@activity('AF Get Information Schema SQL').output.InformationSchemaSQL",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SqlServerTable_OnPrem_SH_IR",
						"type": "DatasetReference",
						"parameters": {
							"TableSchema": {
								"value": "@pipeline().parameters.TaskObject.Source.Extraction.TableSchema",
								"type": "Expression"
							},
							"TableName": {
								"value": "@pipeline().parameters.TaskObject.Source.Extraction.TableName",
								"type": "Expression"
							},
							"KeyVaultBaseUrl": {
								"value": "@pipeline().parameters.TaskObject.KeyVaultBaseUrl",
								"type": "Expression"
							},
							"PasswordSecret": {
								"value": "@pipeline().parameters.TaskObject.Source.Database.PasswordKeyVaultSecretName",
								"type": "Expression"
							},
							"Server": {
								"value": "@pipeline().parameters.TaskObject.Source.Database.SystemName",
								"type": "Expression"
							},
							"Database": {
								"value": "@pipeline().parameters.TaskObject.Source.Database.Name",
								"type": "Expression"
							},
							"UserName": {
								"value": "@pipeline().parameters.TaskObject.Source.Database.Username",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Switch Load Type",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "AF Persist Metadata and Get Mapping",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@pipeline().parameters.TaskObject.Source.Extraction.IncrementalType",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "Full",
							"activities": [
								{
									"name": "Execute OnP-SQL-Full-Load-OnP-SH-IR",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "OnP-SQL-Full-Load-OnP-SH-IR",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"TaskObject": {
												"value": "@pipeline().parameters.TaskObject",
												"type": "Expression"
											},
											"Mapping": {
												"value": "@activity('AF Persist Metadata and Get Mapping').output.value",
												"type": "Expression"
											},
											"BatchCount": "1",
											"Item": "1"
										}
									}
								}
							]
						},
						{
							"value": "Watermark",
							"activities": [
								{
									"name": "Execute OnP-SQL-Watermark-OnP-SH-IR",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Lookup New Watermark",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "OnP-SQL-Watermark-OnP-SH-IR",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"TaskObject": {
												"value": "@pipeline().parameters.TaskObject",
												"type": "Expression"
											},
											"Mapping": {
												"value": "@activity('AF Persist Metadata and Get Mapping').output.value",
												"type": "Expression"
											},
											"NewWaterMark": {
												"value": "@activity('Lookup New Watermark').output.firstRow.newWatermark",
												"type": "Expression"
											},
											"Item": "1",
											"BatchCount": "1"
										}
									}
								},
								{
									"name": "Lookup New Watermark",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:30:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@{pipeline().parameters.TaskObject.Source.Extraction.IncrementalSQLStatement}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SqlServerTable_OnPrem_SH_IR",
											"type": "DatasetReference",
											"parameters": {
												"TableSchema": {
													"value": "@pipeline().parameters.TaskObject.Source.Extraction.TableSchema",
													"type": "Expression"
												},
												"TableName": {
													"value": "@pipeline().parameters.TaskObject.Source.Extraction.TableName",
													"type": "Expression"
												},
												"KeyVaultBaseUrl": {
													"value": "@pipeline().parameters.TaskObject.KeyVaultBaseUrl",
													"type": "Expression"
												},
												"PasswordSecret": {
													"value": "@pipeline().parameters.TaskObject.Source.Database.PasswordKeyVaultSecretName",
													"type": "Expression"
												},
												"Server": {
													"value": "@pipeline().parameters.TaskObject.Source.Database.SystemName",
													"type": "Expression"
												},
												"Database": {
													"value": "@pipeline().parameters.TaskObject.Source.Database.Name",
													"type": "Expression"
												},
												"UserName": {
													"value": "@pipeline().parameters.TaskObject.Source.Database.Username",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": true
									}
								}
							]
						},
						{
							"value": "Full-Chunk",
							"activities": [
								{
									"name": "Execute OnP-SQL-Full-Load-Chunk-OnP-SH-IR",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Lookup Chunk",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "OnP-SQL-Full-Load-Chunk-OnP-SH-IR",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"TaskObject": {
												"value": "@pipeline().parameters.TaskObject",
												"type": "Expression"
											},
											"Mapping": {
												"value": "@activity('AF Persist Metadata and Get Mapping').output.value",
												"type": "Expression"
											},
											"BatchCount": {
												"value": "@activity('Lookup Chunk').output.firstRow.batchcount",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Lookup Chunk",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:30:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@{pipeline().parameters.TaskObject.Source.Extraction.IncrementalSQLStatement}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SqlServerTable_OnPrem_SH_IR",
											"type": "DatasetReference",
											"parameters": {
												"TableSchema": {
													"value": "@pipeline().parameters.TaskObject.Source.Extraction.TableSchema",
													"type": "Expression"
												},
												"TableName": {
													"value": "@pipeline().parameters.TaskObject.Source.Extraction.TableName",
													"type": "Expression"
												},
												"KeyVaultBaseUrl": {
													"value": "@pipeline().parameters.TaskObject.KeyVaultBaseUrl",
													"type": "Expression"
												},
												"PasswordSecret": {
													"value": "@pipeline().parameters.TaskObject.Source.Database.PasswordKeyVaultSecretName",
													"type": "Expression"
												},
												"Server": {
													"value": "@pipeline().parameters.TaskObject.Source.Database.SystemName",
													"type": "Expression"
												},
												"Database": {
													"value": "@pipeline().parameters.TaskObject.Source.Database.Name",
													"type": "Expression"
												},
												"UserName": {
													"value": "@pipeline().parameters.TaskObject.Source.Database.Username",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": true
									}
								}
							]
						},
						{
							"value": "Watermark-Chunk",
							"activities": [
								{
									"name": "Execute OnP-SQL-Watermark-Chunk-OnP-SH-IR",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Lookup New Watermark and Chunk",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "OnP-SQL-Watermark-Chunk-OnP-SH-IR",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"TaskObject": {
												"value": "@pipeline().parameters.TaskObject",
												"type": "Expression"
											},
											"Mapping": {
												"value": "@activity('AF Persist Metadata and Get Mapping').output.value",
												"type": "Expression"
											},
											"NewWatermark": {
												"value": "@activity('Lookup New Watermark and Chunk').output.firstRow.newWatermark",
												"type": "Expression"
											},
											"BatchCount": {
												"value": "@activity('Lookup New Watermark and Chunk').output.firstRow.batchcount",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Lookup New Watermark and Chunk",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:30:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@{pipeline().parameters.TaskObject.Source.Extraction.IncrementalSQLStatement}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SqlServerTable_OnPrem_SH_IR",
											"type": "DatasetReference",
											"parameters": {
												"TableSchema": {
													"value": "@pipeline().parameters.TaskObject.Source.Extraction.TableSchema",
													"type": "Expression"
												},
												"TableName": {
													"value": "@pipeline().parameters.TaskObject.Source.Extraction.TableName",
													"type": "Expression"
												},
												"KeyVaultBaseUrl": {
													"value": "@pipeline().parameters.TaskObject.KeyVaultBaseUrl",
													"type": "Expression"
												},
												"PasswordSecret": {
													"value": "@pipeline().parameters.TaskObject.Source.Database.PasswordKeyVaultSecretName",
													"type": "Expression"
												},
												"Server": {
													"value": "@pipeline().parameters.TaskObject.Source.Database.SystemName",
													"type": "Expression"
												},
												"Database": {
													"value": "@pipeline().parameters.TaskObject.Source.Database.Name",
													"type": "Expression"
												},
												"UserName": {
													"value": "@pipeline().parameters.TaskObject.Source.Database.Username",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": true
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"TaskObject": {
				"type": "object",
				"defaultValue": " [   {     \"TaskInstanceId\": 2,     \"TaskMasterId\": 1,     \"TaskStatus\": \"Untried\",     \"TaskType\": \"SQLtoAzureStorage-OnPrem-SH-IR\",     \"Enabled\": true,     \"ExecutionUid\": 1,     \"KeyVaultBaseUrl\": \"https://adsgofastkeyvault.vault.azure.net/\",     \"Source\": {       \"Type\": \"MsSqlServer\",       \"Database\": {         \"Name\": \"AdventureWorks2017\",         \"SystemName\": \"adsgofast-onpre\",         \"Type\": \"MsSqlServer\",         \"AuthenticationType\": \"SQLAuth\",         \"Username\": \"sqladfir\",         \"PasswordKeyVaultSecretName\": \"adsgofast-onpre-sqladfir-password\"       },       \"Extraction\": {         \"Type\": \"Table\",         \"FullOrIncremental\": true,         \"IncrementalType\": null,         \"TableSchema\": \"Sales\",         \"TableName\": \"SalesOrderDetail\"       }     },     \"Target\": {       \"StorageAccountName\": \"https://adsgofastdatalakeadls.dfs.core.windows.net\",       \"Type\": \"ADLS\",       \"StorageAccountContainer\": \"datalakelanding\",       \"StorageAccountAccessMethod\": \"MSI\",       \"StorageAccountSASUriKeyVaultSecretName\": null,       \"RelativePath\": \"/Unprocessed/adsgofastdatakakeaccelsqlsvr/AWSample/SalesLT/2020/06/08/17/\",       \"DataFileName\": \"Customer_Data.parquet\",       \"SchemaFileName\": \"Customer_Schema.json\"     },     \"DataFactory\": {       \"Id\": 1,       \"Name\": \"adsgofastdatakakeacceladf\",       \"ResourceGroup\": \"AdsGoFastDataLakeAccel\",       \"SubscriptionId\": \"035a1364-f00d-48e2-b582-4fe125905ee3\",     }   } ]"
			}
		},
		"folder": {
			"name": "ADS Go Fast/Data Movement/OnPrem SH IR"
		},
		"annotations": [],
		"lastPublishTime": "2020-08-04T12:40:45Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}